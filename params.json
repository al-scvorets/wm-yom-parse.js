{"name":"wm-yom-parse.js","tagline":"","body":"# Purposes of YOM language\r\n\r\nThe aim of the YOM project is to organize some customers' data in simple and human-readable manner.  \r\nSource data may be saved/edited in this format, but they have to be converted into `javascript objects` for visualization and other processing.  \r\nThe situation is very similar to when the data in CSV format may be stored/edited separately from their pattern in a spreadsheet or database.  \r\nBut unlike CSV, which allows you to store tabular data, YOM is used to store data with hierarchical (tree-like) structures of arbitrary depth.  \r\nExamples of such data are given below.  \r\n  \r\n------\r\n\r\n**TL;DR**  YOM solves about the same problem as the XML, but for those cases where the data is completely separated from the markup.  \r\nIn this case XML is redundant and less human-readable, since all nodes look like `<node> .... </node>`  \r\n\r\n  \r\n# YOM by Examples\r\n\r\nExample #1 (simple taxonomy tree)\r\n----------\r\n```\r\nanimals [cat, dog, elephant {big, gray}],\r\nplants [deciduous   [oak, maple, baobab],\r\n        other   [fir, cactus]\r\n]\r\n```\r\n\r\nExample #2 (menu for some imaginary app)\r\n----------\r\n```\r\nFile [\r\n    New, Open, Save,\r\n    Remove {disabled}\r\n    ],\r\nView [\r\n    Text [ANSI {default}, UTF-8],\r\n    Binary,\r\n    HTML\r\n    ],\r\nHelp [On-line, Forum, About]\r\n```\r\n\r\nExample #3 (some Web page structure)\r\n----------\r\n```\r\nHeader {height:10} [\r\n    Welcome,\r\n    Controls [Help Button, Search Pane]\r\n    ],\r\nMain [\r\n    Teaser, News,\r\n    Articles [1, 2, ..., N]\r\n    ],\r\nFooter [Status Bar [Info1, Info2], Powered By, Copyright notice {color: gold}]\r\n```\r\n\r\nExample #4 (contents of this page)\r\n----\r\n```\r\nPrehistory [\r\n    blah-blah-blah\r\n    ]\r\n\r\nYOM by Examples [\r\n    Example /#1 [blah-blah]\r\n    Example /#2 [blah-blah]\r\n    Example /#3 [blah]\r\n    ]\r\n\r\nAnd so on...\r\n```\r\n\r\n\r\n# (Semi-)Formal Definition\r\n\r\n* Items (nodes) are delimited by ',' (comma) or \\n (line feed)\r\n* Node may have optional set of named attributes (in curly brackets)\r\n* Node may have optional set (array) of subnodes (in square brackets)\r\n\r\nThat's all!\r\n  \r\nAh, yeah...\r\n\r\n* Whitespace at the beginning and end of a node's string is ignored.  \r\nEmpty lines are ignored too.  \r\nUse '{}' or '[]' to make the \"empty node\"  \r\n* '/' (slash) is used for escaping. So '/x' makes to treat 'x' literally (ex: '/,' --> ',' , '//' --> '/' etc.)    \r\nIt's to allow commas and brackets be in the text.\r\n* Each attribute is a pair of the name and optional value. The name is separated from the value (if any) by ':' (colon) or '=' (equals sign).  \r\nIf attribute has no an explicit value (ex. `{gray, big}`) then it is implicitly equal to *true*.  \r\nAttributes are delimited by ',' (comma)\r\n* Special symbol '#' (number sign | hash sign | octothorpe (!?)) is reserved for the future use (yes, we'll have comments! and not only...). It MUST be escaped ('/#') everywhere for now\r\n* One of the symbols '\\' | '+' | '-', or even all, will be used in the line end to make the line continuation.  \r\nAnd it will be in some nearest build.\r\n\r\n# What's in the result\r\n\r\nYOM parser converts YOM formatted text and returns the javascript object of the form:\r\n```\r\n{\r\n    label: \"string\",               // a text value of the node\r\n    attr:   {a1: v1, a2: v2, ...}, // attributes of the node\r\n    nodes: [{}, {}, ...]           // arrray of subnodes; each element is {label, attr, nodes} triplet;\r\n                                   //   and so on, recursively\r\n}\r\n```\r\n\r\n# Relation to other data formats\r\n\r\nYOM is based on `nested parentheses` idea by Sir [Arthur Cayley](https://en.wikipedia.org/wiki/Arthur_Cayley)  \r\nSimilar format is [The Newick tree format](http://evolution.genetics.washington.edu/phylip/newicktree.html)\r\n\r\n\r\n# Q & A\r\n\r\n***Q:*** Why YOM? what it means?  \r\n***A:*** It means \"hey you, do **Y**our **O**wn **M**odel|Markup|Markdown\" I said one fine day  \r\n  \r\n***Q:*** Do you know that word 'Yom' has another [meaning](http://en.wikipedia.org/wiki/Yom)?  \r\n***A:*** I realized it, but it was late. It's not by intention. It's just a coincidence. Really, I wrote YOM at night.\r\n","google":"UA-62159731-1","note":"Don't delete this file! It's used internally to help with page regeneration."}